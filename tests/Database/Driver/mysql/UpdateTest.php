<?php
namespace Wei\Base\Tests\Database\Driver\mysql;

use Wei\Base\Database\Driver\mysql\Insert;
use Wei\Base\Database\Query\BatchUpdate;
use Wei\Base\Database\Query\Condition;
use Wei\Base\Database\Query\ConnectionFactor;
use Wei\Base\Database\Query\Delete;
use Wei\Base\Database\Query\Update;
use Wei\Base\Tests\WeiTestCase;

class DeleteTest extends WeiTestCase
{
    public static function setUpBeforeClass()
    {
        parent::setUpBeforeClass(); // TODO: Change the autogenerated stub

        ConnectionFactor::getInstance()->delete('test', ['name' => '20170516--1737']);
        ConnectionFactor::getInstance()->delete('test', ['name' => '20170516--173701']);
        ConnectionFactor::getInstance()->delete('test', ['name' => '20170516--173702']);
        $values = [
            'name' => '20170516--1737',
            'age' => 1737,
            'uid' => 17370,
            'created' => '2017-05-16 17:37',
        ];
        ConnectionFactor::getInstance()->insert('test', $values);

        $values = [
            'name' => '20170516--173701',
            'age' => 173701,
            'uid' => 1737011,
            'created' => '2017-05-16 17:37',
        ];
        ConnectionFactor::getInstance()->insert('test', $values);

        $values = [
            'name' => '20170516--173702',
            'age' => 173702,
            'uid' => 1737022,
            'created' => '2017-05-16 17:37',
        ];
        ConnectionFactor::getInstance()->insert('test', $values);
    }

    /**
     * 更新
     */
    public function testUpdate()
    {
        $obj = new Update(ConnectionFactor::getInstance(), 'test');
        $obj->condition('name', '20170516--1737');
        $data = [
            'name' => '20170516--1737',
            'age' => 17371,
            'uid' => 1737001,
            'created' => '2017-05-16 17:37:01',
        ];
        ConnectionFactor::enabledSqlLog();
        $result = $obj->update($data);
        var_dump($result);
        print_r(ConnectionFactor::getLastRawSql());
        $this->assertEquals('111', $result);

    }

    /**
     * 批量更新
     */
    public function btestUpdateAll()
    {
        $bathUpdate = new BatchUpdate();
        $condition = new Condition('AND');
        $data = [
            'name' => '20170516--173702',
            'age' => 1737021,
            'uid' => 17370221,
            'created' => '2017-05-16 17:37:01',
        ];
        $bathUpdate->addData($condition, $data);

        $condition = new Condition('AND');
        $data = [
            'name' => '20170516--173701',
            'age' => 173702,
            'uid' => 1737022,
            'created' => '2017-05-16 17:37:01',
        ];
        $bathUpdate->addData($condition, $data);
        $obj = new Update(ConnectionFactor::getInstance(), 'test');
        $result = $obj->updateAll($bathUpdate, false);
        $this->assertEquals('22', $result);
    }
}